// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

package cn.jpush.im.android.pushcommon.proto;

public final class Event {
  private Event() {}
  public static void registerAllExtensions(
      com.google.protobuf.jpush.ExtensionRegistryLite registry) {
  }
  public interface SyncEventRespOrBuilder
      extends com.google.protobuf.jpush.MessageLiteOrBuilder {
    
    // optional uint64 sync_key = 1;
    boolean hasSyncKey();
    long getSyncKey();
    
    // optional int32 total_pages = 2;
    boolean hasTotalPages();
    int getTotalPages();
    
    // optional .jpushim.s2b.EventPage event_page = 3;
    boolean hasEventPage();
    EventPage getEventPage();
  }
  public static final class SyncEventResp extends
      com.google.protobuf.jpush.GeneratedMessageLite
      implements SyncEventRespOrBuilder {
    // Use SyncEventResp.newBuilder() to construct.
    private SyncEventResp(Builder builder) {
      super(builder);
    }
    private SyncEventResp(boolean noInit) {}
    
    private static final SyncEventResp defaultInstance;
    public static SyncEventResp getDefaultInstance() {
      return defaultInstance;
    }
    
    public SyncEventResp getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional uint64 sync_key = 1;
    public static final int SYNC_KEY_FIELD_NUMBER = 1;
    private long syncKey_;
    public boolean hasSyncKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getSyncKey() {
      return syncKey_;
    }
    
    // optional int32 total_pages = 2;
    public static final int TOTAL_PAGES_FIELD_NUMBER = 2;
    private int totalPages_;
    public boolean hasTotalPages() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getTotalPages() {
      return totalPages_;
    }
    
    // optional .jpushim.s2b.EventPage event_page = 3;
    public static final int EVENT_PAGE_FIELD_NUMBER = 3;
    private EventPage eventPage_;
    public boolean hasEventPage() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public EventPage getEventPage() {
      return eventPage_;
    }
    
    private void initFields() {
      syncKey_ = 0L;
      totalPages_ = 0;
      eventPage_ = EventPage.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.jpush.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, syncKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, totalPages_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, eventPage_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeUInt64Size(1, syncKey_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeInt32Size(2, totalPages_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeMessageSize(3, eventPage_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static SyncEventResp parseFrom(
        com.google.protobuf.jpush.ByteString data)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SyncEventResp parseFrom(
        com.google.protobuf.jpush.ByteString data,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SyncEventResp parseFrom(byte[] data)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SyncEventResp parseFrom(
        byte[] data,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SyncEventResp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SyncEventResp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SyncEventResp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SyncEventResp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SyncEventResp parseFrom(
        com.google.protobuf.jpush.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SyncEventResp parseFrom(
        com.google.protobuf.jpush.CodedInputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SyncEventResp prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.jpush.GeneratedMessageLite.Builder<
          SyncEventResp, Builder>
        implements SyncEventRespOrBuilder {
      // Construct using cn.jpush.im.android.pushcommon.proto.Event.SyncEventResp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        syncKey_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        totalPages_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        eventPage_ = EventPage.getDefaultInstance();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public SyncEventResp getDefaultInstanceForType() {
        return SyncEventResp.getDefaultInstance();
      }
      
      public SyncEventResp build() {
        SyncEventResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private SyncEventResp buildParsed()
          throws com.google.protobuf.jpush.InvalidProtocolBufferException {
        SyncEventResp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public SyncEventResp buildPartial() {
        SyncEventResp result = new SyncEventResp(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.syncKey_ = syncKey_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.totalPages_ = totalPages_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.eventPage_ = eventPage_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(SyncEventResp other) {
        if (other == SyncEventResp.getDefaultInstance()) return this;
        if (other.hasSyncKey()) {
          setSyncKey(other.getSyncKey());
        }
        if (other.hasTotalPages()) {
          setTotalPages(other.getTotalPages());
        }
        if (other.hasEventPage()) {
          mergeEventPage(other.getEventPage());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.jpush.CodedInputStream input,
          com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              syncKey_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              totalPages_ = input.readInt32();
              break;
            }
            case 26: {
              EventPage.Builder subBuilder = EventPage.newBuilder();
              if (hasEventPage()) {
                subBuilder.mergeFrom(getEventPage());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEventPage(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint64 sync_key = 1;
      private long syncKey_ ;
      public boolean hasSyncKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getSyncKey() {
        return syncKey_;
      }
      public Builder setSyncKey(long value) {
        bitField0_ |= 0x00000001;
        syncKey_ = value;
        
        return this;
      }
      public Builder clearSyncKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        syncKey_ = 0L;
        
        return this;
      }
      
      // optional int32 total_pages = 2;
      private int totalPages_ ;
      public boolean hasTotalPages() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getTotalPages() {
        return totalPages_;
      }
      public Builder setTotalPages(int value) {
        bitField0_ |= 0x00000002;
        totalPages_ = value;
        
        return this;
      }
      public Builder clearTotalPages() {
        bitField0_ = (bitField0_ & ~0x00000002);
        totalPages_ = 0;
        
        return this;
      }
      
      // optional .jpushim.s2b.EventPage event_page = 3;
      private EventPage eventPage_ = EventPage.getDefaultInstance();
      public boolean hasEventPage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public EventPage getEventPage() {
        return eventPage_;
      }
      public Builder setEventPage(EventPage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        eventPage_ = value;
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setEventPage(
          EventPage.Builder builderForValue) {
        eventPage_ = builderForValue.build();
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeEventPage(EventPage value) {
        if (((bitField0_ & 0x00000004) == 0x00000004) &&
            eventPage_ != EventPage.getDefaultInstance()) {
          eventPage_ =
            EventPage.newBuilder(eventPage_).mergeFrom(value).buildPartial();
        } else {
          eventPage_ = value;
        }
        
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearEventPage() {
        eventPage_ = EventPage.getDefaultInstance();
        
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:jpushim.s2b.SyncEventResp)
    }
    
    static {
      defaultInstance = new SyncEventResp(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:jpushim.s2b.SyncEventResp)
  }
  
  public interface EventPageOrBuilder
      extends com.google.protobuf.jpush.MessageLiteOrBuilder {
    
    // optional int32 page_no = 1;
    boolean hasPageNo();
    int getPageNo();
    
    // repeated .jpushim.s2b.EventPageContent content_list = 2;
    java.util.List<EventPageContent>
        getContentListList();
    EventPageContent getContentList(int index);
    int getContentListCount();
  }
  public static final class EventPage extends
      com.google.protobuf.jpush.GeneratedMessageLite
      implements EventPageOrBuilder {
    // Use EventPage.newBuilder() to construct.
    private EventPage(Builder builder) {
      super(builder);
    }
    private EventPage(boolean noInit) {}
    
    private static final EventPage defaultInstance;
    public static EventPage getDefaultInstance() {
      return defaultInstance;
    }
    
    public EventPage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional int32 page_no = 1;
    public static final int PAGE_NO_FIELD_NUMBER = 1;
    private int pageNo_;
    public boolean hasPageNo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public int getPageNo() {
      return pageNo_;
    }
    
    // repeated .jpushim.s2b.EventPageContent content_list = 2;
    public static final int CONTENT_LIST_FIELD_NUMBER = 2;
    private java.util.List<EventPageContent> contentList_;
    public java.util.List<EventPageContent> getContentListList() {
      return contentList_;
    }
    public java.util.List<? extends EventPageContentOrBuilder>
        getContentListOrBuilderList() {
      return contentList_;
    }
    public int getContentListCount() {
      return contentList_.size();
    }
    public EventPageContent getContentList(int index) {
      return contentList_.get(index);
    }
    public EventPageContentOrBuilder getContentListOrBuilder(
        int index) {
      return contentList_.get(index);
    }
    
    private void initFields() {
      pageNo_ = 0;
      contentList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.jpush.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, pageNo_);
      }
      for (int i = 0; i < contentList_.size(); i++) {
        output.writeMessage(2, contentList_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeInt32Size(1, pageNo_);
      }
      for (int i = 0; i < contentList_.size(); i++) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeMessageSize(2, contentList_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static EventPage parseFrom(
        com.google.protobuf.jpush.ByteString data)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static EventPage parseFrom(
        com.google.protobuf.jpush.ByteString data,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static EventPage parseFrom(byte[] data)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static EventPage parseFrom(
        byte[] data,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static EventPage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static EventPage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static EventPage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static EventPage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static EventPage parseFrom(
        com.google.protobuf.jpush.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static EventPage parseFrom(
        com.google.protobuf.jpush.CodedInputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(EventPage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.jpush.GeneratedMessageLite.Builder<
          EventPage, Builder>
        implements EventPageOrBuilder {
      // Construct using cn.jpush.im.android.pushcommon.proto.Event.EventPage.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        pageNo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        contentList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public EventPage getDefaultInstanceForType() {
        return EventPage.getDefaultInstance();
      }
      
      public EventPage build() {
        EventPage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private EventPage buildParsed()
          throws com.google.protobuf.jpush.InvalidProtocolBufferException {
        EventPage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public EventPage buildPartial() {
        EventPage result = new EventPage(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.pageNo_ = pageNo_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          contentList_ = java.util.Collections.unmodifiableList(contentList_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.contentList_ = contentList_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(EventPage other) {
        if (other == EventPage.getDefaultInstance()) return this;
        if (other.hasPageNo()) {
          setPageNo(other.getPageNo());
        }
        if (!other.contentList_.isEmpty()) {
          if (contentList_.isEmpty()) {
            contentList_ = other.contentList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureContentListIsMutable();
            contentList_.addAll(other.contentList_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.jpush.CodedInputStream input,
          com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              pageNo_ = input.readInt32();
              break;
            }
            case 18: {
              EventPageContent.Builder subBuilder = EventPageContent.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addContentList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int32 page_no = 1;
      private int pageNo_ ;
      public boolean hasPageNo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public int getPageNo() {
        return pageNo_;
      }
      public Builder setPageNo(int value) {
        bitField0_ |= 0x00000001;
        pageNo_ = value;
        
        return this;
      }
      public Builder clearPageNo() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pageNo_ = 0;
        
        return this;
      }
      
      // repeated .jpushim.s2b.EventPageContent content_list = 2;
      private java.util.List<EventPageContent> contentList_ =
        java.util.Collections.emptyList();
      private void ensureContentListIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          contentList_ = new java.util.ArrayList<EventPageContent>(contentList_);
          bitField0_ |= 0x00000002;
         }
      }
      
      public java.util.List<EventPageContent> getContentListList() {
        return java.util.Collections.unmodifiableList(contentList_);
      }
      public int getContentListCount() {
        return contentList_.size();
      }
      public EventPageContent getContentList(int index) {
        return contentList_.get(index);
      }
      public Builder setContentList(
          int index, EventPageContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContentListIsMutable();
        contentList_.set(index, value);
        
        return this;
      }
      public Builder setContentList(
          int index, EventPageContent.Builder builderForValue) {
        ensureContentListIsMutable();
        contentList_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addContentList(EventPageContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContentListIsMutable();
        contentList_.add(value);
        
        return this;
      }
      public Builder addContentList(
          int index, EventPageContent value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureContentListIsMutable();
        contentList_.add(index, value);
        
        return this;
      }
      public Builder addContentList(
          EventPageContent.Builder builderForValue) {
        ensureContentListIsMutable();
        contentList_.add(builderForValue.build());
        
        return this;
      }
      public Builder addContentList(
          int index, EventPageContent.Builder builderForValue) {
        ensureContentListIsMutable();
        contentList_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllContentList(
          Iterable<? extends EventPageContent> values) {
        ensureContentListIsMutable();
        super.addAll(values, contentList_);
        
        return this;
      }
      public Builder clearContentList() {
        contentList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        
        return this;
      }
      public Builder removeContentList(int index) {
        ensureContentListIsMutable();
        contentList_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:jpushim.s2b.EventPage)
    }
    
    static {
      defaultInstance = new EventPage(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:jpushim.s2b.EventPage)
  }
  
  public interface EventPageContentOrBuilder
      extends com.google.protobuf.jpush.MessageLiteOrBuilder {
    
    // optional bytes id = 1;
    boolean hasId();
    com.google.protobuf.jpush.ByteString getId();
    
    // optional uint32 event_kind = 2;
    boolean hasEventKind();
    int getEventKind();
    
    // optional bool full_update = 3;
    boolean hasFullUpdate();
    boolean getFullUpdate();
    
    // repeated .jpushim.s2b.EventMeta event_list = 4;
    java.util.List<EventMeta>
        getEventListList();
    EventMeta getEventList(int index);
    int getEventListCount();
  }
  public static final class EventPageContent extends
      com.google.protobuf.jpush.GeneratedMessageLite
      implements EventPageContentOrBuilder {
    // Use EventPageContent.newBuilder() to construct.
    private EventPageContent(Builder builder) {
      super(builder);
    }
    private EventPageContent(boolean noInit) {}
    
    private static final EventPageContent defaultInstance;
    public static EventPageContent getDefaultInstance() {
      return defaultInstance;
    }
    
    public EventPageContent getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional bytes id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private com.google.protobuf.jpush.ByteString id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public com.google.protobuf.jpush.ByteString getId() {
      return id_;
    }
    
    // optional uint32 event_kind = 2;
    public static final int EVENT_KIND_FIELD_NUMBER = 2;
    private int eventKind_;
    public boolean hasEventKind() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getEventKind() {
      return eventKind_;
    }
    
    // optional bool full_update = 3;
    public static final int FULL_UPDATE_FIELD_NUMBER = 3;
    private boolean fullUpdate_;
    public boolean hasFullUpdate() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public boolean getFullUpdate() {
      return fullUpdate_;
    }
    
    // repeated .jpushim.s2b.EventMeta event_list = 4;
    public static final int EVENT_LIST_FIELD_NUMBER = 4;
    private java.util.List<EventMeta> eventList_;
    public java.util.List<EventMeta> getEventListList() {
      return eventList_;
    }
    public java.util.List<? extends EventMetaOrBuilder>
        getEventListOrBuilderList() {
      return eventList_;
    }
    public int getEventListCount() {
      return eventList_.size();
    }
    public EventMeta getEventList(int index) {
      return eventList_.get(index);
    }
    public EventMetaOrBuilder getEventListOrBuilder(
        int index) {
      return eventList_.get(index);
    }
    
    private void initFields() {
      id_ = com.google.protobuf.jpush.ByteString.EMPTY;
      eventKind_ = 0;
      fullUpdate_ = false;
      eventList_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.jpush.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, eventKind_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, fullUpdate_);
      }
      for (int i = 0; i < eventList_.size(); i++) {
        output.writeMessage(4, eventList_.get(i));
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeBytesSize(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeUInt32Size(2, eventKind_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeBoolSize(3, fullUpdate_);
      }
      for (int i = 0; i < eventList_.size(); i++) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeMessageSize(4, eventList_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static EventPageContent parseFrom(
        com.google.protobuf.jpush.ByteString data)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static EventPageContent parseFrom(
        com.google.protobuf.jpush.ByteString data,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static EventPageContent parseFrom(byte[] data)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static EventPageContent parseFrom(
        byte[] data,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static EventPageContent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static EventPageContent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static EventPageContent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static EventPageContent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static EventPageContent parseFrom(
        com.google.protobuf.jpush.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static EventPageContent parseFrom(
        com.google.protobuf.jpush.CodedInputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(EventPageContent prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.jpush.GeneratedMessageLite.Builder<
          EventPageContent, Builder>
        implements EventPageContentOrBuilder {
      // Construct using cn.jpush.im.android.pushcommon.proto.Event.EventPageContent.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = com.google.protobuf.jpush.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        eventKind_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        fullUpdate_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        eventList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public EventPageContent getDefaultInstanceForType() {
        return EventPageContent.getDefaultInstance();
      }
      
      public EventPageContent build() {
        EventPageContent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private EventPageContent buildParsed()
          throws com.google.protobuf.jpush.InvalidProtocolBufferException {
        EventPageContent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public EventPageContent buildPartial() {
        EventPageContent result = new EventPageContent(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.eventKind_ = eventKind_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fullUpdate_ = fullUpdate_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          eventList_ = java.util.Collections.unmodifiableList(eventList_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.eventList_ = eventList_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(EventPageContent other) {
        if (other == EventPageContent.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasEventKind()) {
          setEventKind(other.getEventKind());
        }
        if (other.hasFullUpdate()) {
          setFullUpdate(other.getFullUpdate());
        }
        if (!other.eventList_.isEmpty()) {
          if (eventList_.isEmpty()) {
            eventList_ = other.eventList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureEventListIsMutable();
            eventList_.addAll(other.eventList_);
          }
          
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.jpush.CodedInputStream input,
          com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              id_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              eventKind_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              fullUpdate_ = input.readBool();
              break;
            }
            case 34: {
              EventMeta.Builder subBuilder = EventMeta.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addEventList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bytes id = 1;
      private com.google.protobuf.jpush.ByteString id_ = com.google.protobuf.jpush.ByteString.EMPTY;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public com.google.protobuf.jpush.ByteString getId() {
        return id_;
      }
      public Builder setId(com.google.protobuf.jpush.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        id_ = value;
        
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = getDefaultInstance().getId();
        
        return this;
      }
      
      // optional uint32 event_kind = 2;
      private int eventKind_ ;
      public boolean hasEventKind() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getEventKind() {
        return eventKind_;
      }
      public Builder setEventKind(int value) {
        bitField0_ |= 0x00000002;
        eventKind_ = value;
        
        return this;
      }
      public Builder clearEventKind() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eventKind_ = 0;
        
        return this;
      }
      
      // optional bool full_update = 3;
      private boolean fullUpdate_ ;
      public boolean hasFullUpdate() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public boolean getFullUpdate() {
        return fullUpdate_;
      }
      public Builder setFullUpdate(boolean value) {
        bitField0_ |= 0x00000004;
        fullUpdate_ = value;
        
        return this;
      }
      public Builder clearFullUpdate() {
        bitField0_ = (bitField0_ & ~0x00000004);
        fullUpdate_ = false;
        
        return this;
      }
      
      // repeated .jpushim.s2b.EventMeta event_list = 4;
      private java.util.List<EventMeta> eventList_ =
        java.util.Collections.emptyList();
      private void ensureEventListIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          eventList_ = new java.util.ArrayList<EventMeta>(eventList_);
          bitField0_ |= 0x00000008;
         }
      }
      
      public java.util.List<EventMeta> getEventListList() {
        return java.util.Collections.unmodifiableList(eventList_);
      }
      public int getEventListCount() {
        return eventList_.size();
      }
      public EventMeta getEventList(int index) {
        return eventList_.get(index);
      }
      public Builder setEventList(
          int index, EventMeta value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventListIsMutable();
        eventList_.set(index, value);
        
        return this;
      }
      public Builder setEventList(
          int index, EventMeta.Builder builderForValue) {
        ensureEventListIsMutable();
        eventList_.set(index, builderForValue.build());
        
        return this;
      }
      public Builder addEventList(EventMeta value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventListIsMutable();
        eventList_.add(value);
        
        return this;
      }
      public Builder addEventList(
          int index, EventMeta value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureEventListIsMutable();
        eventList_.add(index, value);
        
        return this;
      }
      public Builder addEventList(
          EventMeta.Builder builderForValue) {
        ensureEventListIsMutable();
        eventList_.add(builderForValue.build());
        
        return this;
      }
      public Builder addEventList(
          int index, EventMeta.Builder builderForValue) {
        ensureEventListIsMutable();
        eventList_.add(index, builderForValue.build());
        
        return this;
      }
      public Builder addAllEventList(
          Iterable<? extends EventMeta> values) {
        ensureEventListIsMutable();
        super.addAll(values, eventList_);
        
        return this;
      }
      public Builder clearEventList() {
        eventList_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        
        return this;
      }
      public Builder removeEventList(int index) {
        ensureEventListIsMutable();
        eventList_.remove(index);
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:jpushim.s2b.EventPageContent)
    }
    
    static {
      defaultInstance = new EventPageContent(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:jpushim.s2b.EventPageContent)
  }
  
  public interface EventMetaOrBuilder
      extends com.google.protobuf.jpush.MessageLiteOrBuilder {
    
    // optional uint64 eid = 1;
    boolean hasEid();
    long getEid();
    
    // optional uint32 etype = 2;
    boolean hasEtype();
    int getEtype();
    
    // optional uint64 ctime = 3;
    boolean hasCtime();
    long getCtime();
  }
  public static final class EventMeta extends
      com.google.protobuf.jpush.GeneratedMessageLite
      implements EventMetaOrBuilder {
    // Use EventMeta.newBuilder() to construct.
    private EventMeta(Builder builder) {
      super(builder);
    }
    private EventMeta(boolean noInit) {}
    
    private static final EventMeta defaultInstance;
    public static EventMeta getDefaultInstance() {
      return defaultInstance;
    }
    
    public EventMeta getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional uint64 eid = 1;
    public static final int EID_FIELD_NUMBER = 1;
    private long eid_;
    public boolean hasEid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getEid() {
      return eid_;
    }
    
    // optional uint32 etype = 2;
    public static final int ETYPE_FIELD_NUMBER = 2;
    private int etype_;
    public boolean hasEtype() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getEtype() {
      return etype_;
    }
    
    // optional uint64 ctime = 3;
    public static final int CTIME_FIELD_NUMBER = 3;
    private long ctime_;
    public boolean hasCtime() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getCtime() {
      return ctime_;
    }
    
    private void initFields() {
      eid_ = 0L;
      etype_ = 0;
      ctime_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.jpush.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, eid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, etype_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt64(3, ctime_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeUInt64Size(1, eid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeUInt32Size(2, etype_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeUInt64Size(3, ctime_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static EventMeta parseFrom(
        com.google.protobuf.jpush.ByteString data)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static EventMeta parseFrom(
        com.google.protobuf.jpush.ByteString data,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static EventMeta parseFrom(byte[] data)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static EventMeta parseFrom(
        byte[] data,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static EventMeta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static EventMeta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static EventMeta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static EventMeta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static EventMeta parseFrom(
        com.google.protobuf.jpush.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static EventMeta parseFrom(
        com.google.protobuf.jpush.CodedInputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(EventMeta prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.jpush.GeneratedMessageLite.Builder<
          EventMeta, Builder>
        implements EventMetaOrBuilder {
      // Construct using cn.jpush.im.android.pushcommon.proto.Event.EventMeta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        eid_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        etype_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ctime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public EventMeta getDefaultInstanceForType() {
        return EventMeta.getDefaultInstance();
      }
      
      public EventMeta build() {
        EventMeta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private EventMeta buildParsed()
          throws com.google.protobuf.jpush.InvalidProtocolBufferException {
        EventMeta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public EventMeta buildPartial() {
        EventMeta result = new EventMeta(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.eid_ = eid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.etype_ = etype_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ctime_ = ctime_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(EventMeta other) {
        if (other == EventMeta.getDefaultInstance()) return this;
        if (other.hasEid()) {
          setEid(other.getEid());
        }
        if (other.hasEtype()) {
          setEtype(other.getEtype());
        }
        if (other.hasCtime()) {
          setCtime(other.getCtime());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.jpush.CodedInputStream input,
          com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              eid_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              etype_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ctime_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint64 eid = 1;
      private long eid_ ;
      public boolean hasEid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getEid() {
        return eid_;
      }
      public Builder setEid(long value) {
        bitField0_ |= 0x00000001;
        eid_ = value;
        
        return this;
      }
      public Builder clearEid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eid_ = 0L;
        
        return this;
      }
      
      // optional uint32 etype = 2;
      private int etype_ ;
      public boolean hasEtype() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getEtype() {
        return etype_;
      }
      public Builder setEtype(int value) {
        bitField0_ |= 0x00000002;
        etype_ = value;
        
        return this;
      }
      public Builder clearEtype() {
        bitField0_ = (bitField0_ & ~0x00000002);
        etype_ = 0;
        
        return this;
      }
      
      // optional uint64 ctime = 3;
      private long ctime_ ;
      public boolean hasCtime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getCtime() {
        return ctime_;
      }
      public Builder setCtime(long value) {
        bitField0_ |= 0x00000004;
        ctime_ = value;
        
        return this;
      }
      public Builder clearCtime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ctime_ = 0L;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:jpushim.s2b.EventMeta)
    }
    
    static {
      defaultInstance = new EventMeta(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:jpushim.s2b.EventMeta)
  }
  
  public interface SyncEventACKOrBuilder
      extends com.google.protobuf.jpush.MessageLiteOrBuilder {
    
    // optional uint64 sync_key = 1;
    boolean hasSyncKey();
    long getSyncKey();
  }
  public static final class SyncEventACK extends
      com.google.protobuf.jpush.GeneratedMessageLite
      implements SyncEventACKOrBuilder {
    // Use SyncEventACK.newBuilder() to construct.
    private SyncEventACK(Builder builder) {
      super(builder);
    }
    private SyncEventACK(boolean noInit) {}
    
    private static final SyncEventACK defaultInstance;
    public static SyncEventACK getDefaultInstance() {
      return defaultInstance;
    }
    
    public SyncEventACK getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private int bitField0_;
    // optional uint64 sync_key = 1;
    public static final int SYNC_KEY_FIELD_NUMBER = 1;
    private long syncKey_;
    public boolean hasSyncKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getSyncKey() {
      return syncKey_;
    }
    
    private void initFields() {
      syncKey_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.jpush.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, syncKey_);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.jpush.CodedOutputStream
          .computeUInt64Size(1, syncKey_);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static SyncEventACK parseFrom(
        com.google.protobuf.jpush.ByteString data)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SyncEventACK parseFrom(
        com.google.protobuf.jpush.ByteString data,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SyncEventACK parseFrom(byte[] data)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static SyncEventACK parseFrom(
        byte[] data,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.jpush.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static SyncEventACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SyncEventACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static SyncEventACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SyncEventACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static SyncEventACK parseFrom(
        com.google.protobuf.jpush.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static SyncEventACK parseFrom(
        com.google.protobuf.jpush.CodedInputStream input,
        com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(SyncEventACK prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.jpush.GeneratedMessageLite.Builder<
          SyncEventACK, Builder>
        implements SyncEventACKOrBuilder {
      // Construct using cn.jpush.im.android.pushcommon.proto.Event.SyncEventACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private void maybeForceBuilderInitialization() {
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        syncKey_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public SyncEventACK getDefaultInstanceForType() {
        return SyncEventACK.getDefaultInstance();
      }
      
      public SyncEventACK build() {
        SyncEventACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private SyncEventACK buildParsed()
          throws com.google.protobuf.jpush.InvalidProtocolBufferException {
        SyncEventACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public SyncEventACK buildPartial() {
        SyncEventACK result = new SyncEventACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.syncKey_ = syncKey_;
        result.bitField0_ = to_bitField0_;
        return result;
      }
      
      public Builder mergeFrom(SyncEventACK other) {
        if (other == SyncEventACK.getDefaultInstance()) return this;
        if (other.hasSyncKey()) {
          setSyncKey(other.getSyncKey());
        }
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.jpush.CodedInputStream input,
          com.google.protobuf.jpush.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              syncKey_ = input.readUInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional uint64 sync_key = 1;
      private long syncKey_ ;
      public boolean hasSyncKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getSyncKey() {
        return syncKey_;
      }
      public Builder setSyncKey(long value) {
        bitField0_ |= 0x00000001;
        syncKey_ = value;
        
        return this;
      }
      public Builder clearSyncKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        syncKey_ = 0L;
        
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:jpushim.s2b.SyncEventACK)
    }
    
    static {
      defaultInstance = new SyncEventACK(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:jpushim.s2b.SyncEventACK)
  }
  
  
  static {
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}

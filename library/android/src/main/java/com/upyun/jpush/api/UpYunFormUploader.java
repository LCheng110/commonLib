/** * com.upyun.api * Upload.java */package com.upyun.jpush.api;import com.loopj.android.jpush.http.SyncHttpClient;import com.upyun.jpush.api.listener.CompleteListener;import com.upyun.jpush.api.listener.ProgressListener;import com.upyun.jpush.api.main.CountingHttpEntity;import org.apache.http.HttpResponse;import org.apache.http.HttpStatus;import org.apache.http.StatusLine;import org.apache.http.client.methods.HttpPost;import org.apache.http.util.EntityUtils;import org.apache.jpush.http.entity.mime.HttpMultipartMode;import org.apache.jpush.http.entity.mime.MultipartEntity;import org.apache.jpush.http.entity.mime.content.ByteArrayBody;import org.apache.jpush.http.entity.mime.content.StringBody;import org.json.JSONObject;import java.io.File;import cn.jpush.im.android.utils.FileUtil;/** * Upload.java * * @author vincent chen * @since 2012 Jun 18, 2012 4:52:49 PM */public class UpYunFormUploader {    private static SyncHttpClient httpclient = new SyncHttpClient();    public UpYunFormUploader() {        httpclient.setConnectTimeout(UpyunUploadManager.CONNECT_TIMEOUT);        httpclient.setResponseTimeout(UpyunUploadManager.RESPONSE_TIMEOUT);        httpclient.setEnableRedirects(false);    }    /**     * 上传文件到又拍云存储。 目前根据android系统版本的不同，只支持小文件上传。     */    public String upload(String policy, String signature, String bucket, String sourceFile,            ProgressListener progressListener, CompleteListener completeListener) throws Exception {        String returnStr = null;        if (bucket == null || bucket.equals("")) {            throw new Exception("bucket can not be empty.");        }        if (sourceFile == null || sourceFile.equals("")) {            throw new Exception("source file can not be empty.");        }        if (policy == null || policy.equals("")) {            throw new Exception("policy can not be empty.");        }        if (signature == null || signature.equals("")) {            throw new Exception("signature can not be empty.");        }        HttpPost httppost = new HttpPost("http://v0.api.upyun.com/" + bucket + "/");        MultipartEntity entity = new MultipartEntity(HttpMultipartMode.BROWSER_COMPATIBLE);        entity.addPart("file", new ByteArrayBody(FileUtil.File2byte(sourceFile),                UpYunMultipartUploader.APPLICATION_OCTET_STREAM, "file"));        entity.addPart("policy", new StringBody(policy));        entity.addPart("signature", new StringBody(signature));        if (progressListener != null) {            CountingHttpEntity ce = new CountingHttpEntity(entity, progressListener, 0,                    new File(sourceFile).length());            httppost.setEntity(ce);        } else {            httppost.setEntity(entity);        }        HttpResponse response = httpclient.getHttpClient().execute(httppost);        StatusLine statusLine = response.getStatusLine();        int code = statusLine.getStatusCode();        String str = EntityUtils.toString(response.getEntity());        if (code != HttpStatus.SC_OK) {            JSONObject obj = new JSONObject(str);            String msg = obj.getString("message");            msg = new String(msg.getBytes("UTF-8"), "UTF-8");            Exception exception = new Exception(msg);            completeListener.result(false, code, "");            throw exception;        } else {            JSONObject obj = new JSONObject(str);            returnStr = obj.getString("url");            completeListener.result(true, code, "");        }        return returnStr;    }}